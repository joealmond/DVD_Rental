-- Write your solutions here...

-- count the actors with “Temple” as their last name
-- SELECT * FROM dvd_rental.public.actor
-- WHERE last_name LIKE 'Temple';

-- list all addresses in “England” district with smaller city id’s than 500
-- SELECT * FROM address
-- WHERE city_id < 500;

-- what is the customer id and the payment amount of the last payment
-- SELECT customer_id, amount FROM payment
-- ORDER BY payment_date DESC
-- LIMIT 1;

-- which movie is the cheapest to rent where the DVD includes the deleted scenes
-- SELECT * FROM film
-- WHERE 'Deleted Scenes' = ANY(special_features) ;

-- list all movies with Dragon in the title
-- SELECT * FROM film
-- WHERE title LIKE '%Dragon%';

-- how many movie categories start with C
-- SELECT * FROM category
-- WHERE name LIKE 'C%';

-- how many dvds were rented on the 30th day of any month
-- SELECT * FROM rental
-- WHERE EXTRACT(DAY FROM rental_date) = 30;

-- how much would it cost to rent all PG rated dvds
-- SELECT SUM(rental_rate) * SUM(rental_duration) AS total_cost FROM film
-- WHERE rating = 'PG';

-- which dvd was rented the earliest in June
-- SELECT * FROM rental
-- WHERE EXTRACT(MONTH FROM rental_date) = 6
-- ORDER BY rental_date ASC
-- LIMIT 1;

-- which is the longest, most expensive (replacement cost) dvd that is PG-13 rated
-- SELECT replacement_cost AS most_expensive_rplacement_cost FROM film
-- WHERE rating = 'PG-13'
-- ORDER BY replacement_cost DESC
-- LIMIT 1;

-- list the rental id for all DVDs which were returned later than one week
-- SELECT * FROM rental
-- WHERE EXTRACT (DAY FROM return_date - rental_date) > 7;

--With GROUP BY:
-- which is the most common last name among the actors?
-- SELECT last_name, count(last_name) AS count FROM actor
-- GROUP BY last_name
-- ORDER BY count DESC
-- LIMIT 1;

-- calculate how much would it cost to rent all dvds for each rating
-- SELECT rating, SUM(rental_rate) * SUM(rental_duration) AS cost FROM film
-- group by rating
-- ORDER BY cost;

-- what is the customer id for the person renting the highest amount of dvds

--Write queries for each of the following questions:
-- Who is the actor with the initials B. D. ?

-- Get a list of all the rentals that happened on your birthday

-- List all actors whose last name starts with B

-- Find all addresses in the system from California district

-- List all the movies which has Japanese language

-- List all Sci-Fi films which feature robot(s)

-- What's the name of the manager of the store on 'MySQL Boulevard'?

-- Which movies were rented when Mike was working?

-- Find the top 10 most expensive rentals and list their prices and customer id
-- Optional tasks:
--(Requires other keywords like GROUP BY, HAVING, DISTINCT)

-- How many rentals happened in June on each day? Give me a list of the ones bigger than 300.

-- How many films are for each film rating? order them by the largest number

-- How many cities are present in the database from each country? Count them and show me a list with the country name, count, and names of the cities. Filter them, so I only see the counts bigger than 20.

-- list the profit of each film category

-- rental_rate , film table $ -> 0.99 $$ -> 2.99 $$$ -> 4.99

-- Select the ids, full names, and the sum of payments of customers, who paid more than 180 dollars already!

-- Categorize customers - HIGH, MEDIUM, LOW - based on how much income they contributed to our business! (HIGH, above 180, MEDIUM - above 80, LOW - otherwise. Hint: CASE - WHEN)

-- How many HIGH, MEDIUM, and LOW category customers do we have?

-- How much income was generated by each group?

-- What is each category's minimum, maximum, and average of the generated outcome?
